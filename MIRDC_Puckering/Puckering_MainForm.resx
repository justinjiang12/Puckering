<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>