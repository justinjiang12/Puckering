<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>